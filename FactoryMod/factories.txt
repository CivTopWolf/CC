
#----------------------------------------------------------------------------------------------------------------------
#Factories

#The main part of this plugin's functionality will be defined by this section as it specifies most of the configuration
#for your factories. Under the option factories you will be required to specify each factories configuration, each factory
#needs it's own identifier here, an example could look like this:

#factories:
#   IAmAnIdentifer:
#       type: FCC
#       name: Stone Smelter
#   SoAmI:
#       type: PIPE
#       name: Pipinator

#All factories have in common that they require you to define a type and a name. The type must be one of the predefined 
#options explained further below to specify the physical appearance and the broad functionality of the factory.
#The name can be any string, which will be used to identify this factory at a later point. There may be many different
#factories of the same type with different names with completly different configurations, but ingame factories with
#the same name are guaranteed to have the same functionality. Because of that NEVER EVER duplicate factory names, not 
#even if their type is different.

#Currently there are three different types of factories:

#1. FCC

#FCC is an acronym for FurnaceCraftingTableChest, which is the "classic" factory and what factories used to be in the first
#version of FactoryMod before its rewrite. As you might guess it consist of a crafting table, a furnace and a chest. The
#crafting table has to be in the middle between the furnace and the chest either vertical or horizontal. Those factories
#use an item which is burned in furnace as fuel to execute recipes, which usually use up some sort of item in the chest
#to produce another. A factory can have as many recipes as you want, the details for those are defined further down in the
#config. The identifier used for this type of factory in the config is FCC. An example config to explain every possible
#option for this factory:

#smelteridentiferbla:
#   type: FCC
#   name: Smelter
#   updatetime: 2s
#   health: 20000
#   grace_period: 14d
#   decay_amount: 40
#   fuel:
#       fuelidentifier:
#           material: COAL
#           durability: 1
#   fuel_consumption_intervall: 10s
#   setupcost:
#       dirt:
#           material: DIRT
#           amount: 64
#       stone:
#           material: STONE
#           amount: 64
#   recipes:
#    - Smelt iron ore
#    - Smelt diamond ore
#    - Smelt stone
#    - Upgrade smelter

#type and name work as already described above

#updatetime decides how often this factory is ticked to check whether it still has all the materials required, fuel etc.
#If this is not specified the default option which was specified above will be used. For more details on this option read
#the explaination next to the default updatetime above

#health determines how much health the factory has and how long it takes for it go in disrepair. If this option is not set,
#the default_health specified at the beginning of the config will be used

#grace_period determines how long the factory will stay alive while at 0 health. If the factory remains at 0 health for this
#time period, it will be permanently removed. Repairing the factory once will reset this counter and if this value is not set
#for a factory, default_grace_period as specified at the start of the config will be used

#decay_amount is the amount of health the factory loses every time factories are damaged by time based decay. The intervall for
#this damaging is the same for all factories and specified as decay_intervall at the top of the config. If no decay_amount is
#specified for a factory, default_decay_amount as specified at the top of the config will be used

#fuel specifies which item is used in the furnace to power this factory. You will still need to give the fuel it's own
#sub identifer here, because it's techincally part of a list of items. If this option is not set, the default fuel specified
#above will be used.

#fuel_consumption_intervall describes how often fuel is consumed if the factory is running with any recipe. If it is not set,   
#the default fuel consumption intervall specified above will be used.

#setupcost are the materials the player will need to create this factory. Two factories may not have the exact same setupcost,
#otherwise there is no way to determine which factory a player actually intended to setup.

#recipes is the option which defines what this FCC actually does, but you are only supposed to list the names of the
#recipes this factory is meant to run here. The exact functionality of the recipes is defined further below, ensure that the
#names given to the recipes are identical with the ones used here, even the capitalization has to be the same. The same recipe
#may be used by multiple factories or exist in the config without being used by any factory.


#Additionally it is also possible to upgrade factories, which turns the factory into a completly different one after a specific
#recipe. To do so, the upgraded version must be added to the list of factories with FCCUPGRADE as the type identifier. Example:

#upgradedsmelter:
#   type: FCCUPGRADE
#   name: Upgraded Smelter
#   updatetime: 2s
#   fuel:
#       fuelidentifier:
#           material: COAL
#           durability: 1
#   fuel_consumption_intervall: 10s
#   recipes:
#    - Smelt emerald ore

#As you can see this is pretty much identical to a normal factory aside from the type and the fact that an upgraded factory
#does not specify a setup cost. The actual upgrade cost will be contained in the recipe which is used to upgrade the factory


#2. Pipe

#Pipes allow players to transport items over longer distances. This is meant to replace hopper chains, which can have heavy
#impact on the server performance. The pipes themselves consist of a dropper, which represents the start point of the pipe
#and it's pumper, a furnace to consume fuel while transporting, the actual pipe consisting of stained glass blocks and a target 
#block with an inventory.

#An example config for a pipe:

#thisIsAPipeIdentifer123:
#   type: PIPE
#   name: Example Pipe
#   updatetime: 2s
#   setupcost:
#       redstone:
#           material: REDSTONE
#           amount: 64
#   fuel:
#       normalcoal:
#           material: COAL
#   fuel_consumption_intervall: 5s
#   transfer_time_multiplier: 1s
#   transferamount: 16
#   glass_color: 1
#   maximum_length: 32

#type for all pipes must be PIPE and name a unique identifer, standard stuff

#update time specifies how often this factory is ticked, see default_update_time for a detailed description of updatetimes
#functionality

#setupcost are the items required in the dropper when creating this factory

#fuel specifies the fuel the pipe uses up while transferring, standard as described above

#fuel_consumption_intervall specifies how often fuel is consumed, again this works exactly as described above

#transfer_time_multiplier defines how long the pipe takes to transfer one load of items. The total transportation time scales
#directly with the length of the pipe and the value specified here multiplied with the length of the pipe (only counting
#glass blocks) results in the total transportation time per batch. For example if you set this value to one second, a pipe
#which is 10 blocks long will take 10 seconds to transport a batch of items.

#transferamount is the total amount of items transferred per batch. 

#glass_color is the durability value of the glass this pipe is supposed to have. For a full list see:
#http://minecraft.gamepedia.com/Stained_Glass#Block_data

#maximum_length defines how long this type of pipe may be at maximum. Length only counts the glass part here and this value
#may not be bigger than 512. Be aware that allowing many very long pipes might cause performance problems


#3. Sorter

#Sorters allow players to sort item from a single dispenser into different other containers. What gets sorted where is
#completly up to the player, the factory itself only consists of a dispenser and a furnace. The dispenser is the main block of 
#the factory which contains the items which will be sorted and the blocks in which will be sorted have to be adjacent to it.
#The furnace simply consumes fuel to power the factory, like it's done for other factories as well. An example config:

#fkIsGonnaLikeThis:
#   type: SORTER
#   name: The first sorter
#   updatetime: 2s
#   fuel:
#       normalcoal:
#           material: COAL
#   fuel_consumption_intervall: 5s
#   setupcost:
#       redblocks:
#           material: REDSTONE_BLOCK
#           amount: 64
#   sort_time: 2s
#   sort_amount: 32
#   maximum_materials_per_side: 20


# type, name, updatetime, fuel and fuel_consumption_intervall work all exactly as described above

#setupcost are the material requires when setting up this factory

#sort_time is the amount of time it takes for the sorter to sort one batch of items, where one batch is the sort amount specified
#in the config.

#sort_amount is the amount of items that gets sorted per run

#maximum_materials_per_side is an amount that limits how many items you can assign to a specific side (so the sorter sorts them
#in this direction)

factories:

  kiln:
    type: FCC
    name: Kiln
    citadelBreakReduction: 1.0
    setupcost:
      clay:
        material: HARD_CLAY
        amount: 384
    recipes:
     - sinter_stone
     - sinter_sandstone
     - sinter_red_sandstone
     - make_glass
     - fire_terracotta
     - fire_bricks
     - fire_netherrack
     - fire_red_netherrack
  furnace:
    type: FCC
    name: Furnace
    citadelBreakReduction: 1.0
    setupcost:
      bricks:
        material: BRICK
        amount: 640
    recipes:
     - sinter_stone2
     - sinter_sandstone2
     - sinter_red_sandstone2
     - make_glass2
     - fire_terracotta2
     - fire_bricks2
     - fire_netherrack2
     - fire_red_netherrack2
  blast_furnace:
    type: FCC
    name: Blast Furnace
    citadelBreakReduction: 1.0
    setupcost:
      bricks:
        material: BRICK
        amount: 1024
    recipes:
     - sinter_stone3
     - sinter_sandstone3
     - sinter_red_sandstone3
     - make_glass3
     - fire_terracotta3
     - fire_bricks3
     - fire_netherrack3
     - fire_red_netherrack3
  grinding_mill:
    type: FCC
    name: Grinding Mill
    citadelBreakReduction: 1.0
    setupcost:
      leather:
        material: LEATHER
        amount: 32
      stone:
        material: STONE
        amount: 128
      log:
        material: LOG
        durability: -1
        amount: 128
    recipes:
     - crush_lapis
     - crush_coal
     - crush_redstone
     - crush_gold_ore
     - crush_stone
     - crush_cobble
     - crush_gravel
     - crush_glowstone
     - grind_bones
     - grind_roses
     - grind_dandelions
     - repair_grinding_mill
  textile_factory:
    type: FCC
    name: Textile Factory
    citadelBreakReduction: 1.0
    setupcost:
      leather:
        material: LEATHER
        amount: 64
      wool:
        material: WOOL
        amount: 256
    recipes:
     - make_string
     - make_wool
     - make_carpet
     - make_bed
     - make_quilted_armor
     - repair_textile_factory
